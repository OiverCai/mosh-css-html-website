/* 字体 */
html {
  /* 62.5% * 16 === 10 */
  font-size: 62.5%;
}

:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-headings: #1b0760;
  --color-body: #918ca4;
  --color-body-darker: #5c5577;
  --color-border: #ccc;
  --border-radius: 30px;
}

*,
*::before,
*::after{
  box-sizing: border-box; /*想要设置的边框和内边距的值是包含在width内的 更好计算*/
}

body {
  font-family: Inter, arial, helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5;
  color: var(--color-body);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem; /* 通过测量得出大概离下面正文20px  但是文字的顶外边距大于了这个值所以这么设置没有用  所以让p 的 margin-top: 0;*/
}

h1 {
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}

p {
  margin-top: 0;
}

@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }

  h1 {
    font-size: 8rem;
  }

  h2 {
    font-size: 4rem;
  }

  h3 {
    font-size: 2.4rem;
  }
}

/* 链接 links */
a {
  text-decoration: none; /* 没有下划线了 */
}

.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}

.link-arrow::after {
  content: "-->";
  margin-left: 5px; /* 这里只想要个空隙,所以px就可以了 */
  transition: margin 0.5s;
}

.link-arrow:hover::after {
  /* 这条规则只会动态的在尾部伪类悬停的状态才起效 而且顺序不能反 */
  margin-left: 15px;
}

@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* 标签 badge */

.badge {
  border-radius: 20px;
  font-size: 2rem;
  font-weight: 600;
  padding: 0.5rem  2rem;
  white-space: nowrap; /* 这里防止标签的文字另起一行  css 防止文字另起一行*/
}

.badge--primary {
  /* BEM block element modifyier 块元素构造符 用两个短横线表示一个块，或者说一个组件的构造 比如主要标签 */
  background: var(--color-primary);
  color: white;
}

.badge--secondary {
  background: var(--color-secondary);
  color: white;
}

.badge--small{
    font-size: 1.6rem;
    padding: 0.5rem 1.5rem;
}

@media screen and (min-width: 1024px) {
    .badge {
        font-size: 1.5rem;
    }
    .badge--small{
        font-size: 1.2rem;
    }
}

/* lists 列表 */
.list{  /* 因为样式图里虽然有横向和纵向的 但还是有共性的  都没有标号和下划线之类 */
  list-style: none; 
  padding-left: 0;   /* 也要去掉所有浏览器给列表的外边距 */
  color: var(--color-headings);

}

.list--inline .list__item{  /* 区域名和结构名用双下划线分开  它不是另一个单独存在的元素或者组件，它只是存在于这个列表中的 */
  display : inline-block;
  margin-right: 2rem;
}

.list--tick{
  list-style-image: url(../images/tick.svg);
  /* 指定列表中的列表项标记的图像： */
  padding-left: 3rem;
}

.list--tick .list__item{
  /* 防止左边被屏幕吞噬显示不出   这里的嵌套是有一定道理的,如果删除.list--tick就会显示到所有list__item里 */
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
  .list--tick .list__item{
    /* 区别就是图标和文字之间距离小一点 */
    padding-left: 0;
  }
}

/* 图标 icon */

.icon{
  width: 40px;
  height: 40px;
}

.icon--primary{
  fill : var(--color-primary)
  /* fill只对svg生效  设置颜色 */
}

.icon-container{
  background-color: #f3f9fa;
  width: 64px;
  height: 64px;
  border-radius: 100%;
  display: inline-flex; 
  justify-content: center;
  align-items: center;
  /* html里用的是span,高度是不起作用的,所以显示错误 如果用block虽然在一个行内  但就会换行,这是我们不希望的 inline-block就不会对准中心
  flex主轴默认水平 */
}


/* 按钮 botton */
.btn{
  border-radius: 40px;
  border: 0;
  cursor: pointer; /*放置时鼠标的样式*/
  font-size: 1.8rem;
  font-weight:600;
  padding: 2rem 3rem;
  margin: 1rem 0;
  text-transform: uppercase;
  white-space: nowrap;
  text-align: center;
}

.btn--primary{
  background: var(--color-primary);
  color: #fff;
}

.btn--primary:hover{
  background: #3a8ffd;
}

.btn--secondary{
  background: var(--color-secondary);
  color: #fff;
}

.btn--secondary:hover{
  background: #00c8eb;
}

.btn--accent{
  background: var(--color-accent);
  color: #fff;
}

.btn--accent:hover{
  background: #ec3000;
}

.btn--outline {
  background: #fff;
  color: var(--color-headings);
  border: 2px solid var(--color-headings);
}

.btn--outline:hover {
  background: var(--color-headings);
  color: #fff;
}

.btn--block{
  /* 延伸到一整行显示 */
  width: 100%;
  display: inline-block;
}

@media screen and (min-width: 1024px) {
  .btn{
    font-size: 1.5rem;
  }
}





/* inputs 输入 */

.input{
  border-radius: var(--border-radius);
  border: 1px solid var(--color-border);
  color: var(--color-headings);
  font-size: 2rem;  /* 因为normalize修改了字体大小,所以这里要重新设置 */
  outline: 0; /* 点击时的外边框 厚度? */
  padding: 1.5rem 3.5rem;
}


::placeholder{  /* 占位符的伪元素 */
  color: #cdcbd7;

}

.input-group{
  border : 1px solid var(--color-border);
  border-radius: var(--border-radius);
  display: flex;
  /* 为了让按钮和输入占满整个 flex flex-grow  */
}

.input-group .input{
  border: 0;
  flex-grow: 1;
  padding: 1.5rem 1rem;
}

.input-group .btn{
  margin: 4px 4px;/* 不希望受到字体大小的影响,外边距永远是4px */
}

@media screen and  (min-width: 1024px){
    .input{
      font-size:1.5rem;
    }
}


/* card 卡片 */
.card{
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3;
  /* 垂直水平位移为0  将羽化值设为20像素，让他更加软化 然后缩放设为10像素 */
  overflow: hidden;
  /* 设置.card__header时 子元素颜色溢出了,标题的尺寸就比父级元素大了，也就它的容器ー一卡片元素  把父元素的圆角覆盖了 */
}

.card__header,
.card__body 
{
  padding: 2rem 3rem;
}

.card--primary .card__header{
  background: var(--color-primary);
  color: #fff;
}

.card--secondary .card__header{
  background: var(--color-secondary);
  color: #fff;
}

.card--secondary .badge--secondary {
  background: #02cdf1;
}

/* 计划 plans */

.plan__name{
  color: #fff;
  margin: 0;
  /* h3自带margin 这里我们修改小一点 */
  font-weight: 500;
  font-size: 2.4rem;
}

.plan__price{
  font-size: 6rem;
}

.plan__billing-cycle{
  opacity: 80%;
  font-weight: 600;
  font-size: 2.4rem;
  margin-right: 1rem;
}

.plan__description{
  font-size: 2rem;
  font-weight: 300;
  letter-spacing: 1px;
  display: block; /*这样就能独立一行*/
}

.plan .list__item{
  margin-bottom: 2rem;
}

.plan--popular .card__header {
  position: relative;
}
.plan--popular .card__header::before {
  /* 把这个badge作为bofore的内容放上去 */
  content: url(../images/popular.svg);
  width: 40px;
  display: inline-block;
  /* 因为这是一个行内元素，我们需要改为行内块元素，这样宽度才会有用 */
  position:absolute;
  /* absolute需要父组件是relative */
  top: -6px;
  right : 5%;
  overflow: visible;
}

@media screen and (min-width: 1024px){
  .plan__name{
    font-size: 1.4rem;
  }

  .plan__price{
    font-size:5rem;
  }
  .plan__billing-cycle{
    font-size: 1.6rem ;
  }
  .plan__description{
    font-size:1.7rem;
  }
}


/* 媒体组件 media */

.media{
  display:flex;
}

.media__title{
  margin-top :0;
}

.media__body{
  margin: 0 2rem;
}

.media__image{
  margin-top: 1rem;
}

/* 引用 quotes */

.quote{
  color: var(--color-body-darker);
  font-style: italic;
  font-size: 3rem;
  line-height: 1.3;
}

.quote__text::before{
  content : open-quote;
  /*开始引号和结束引号 */
}

.quote__text::after{
  content : close-quote;
}