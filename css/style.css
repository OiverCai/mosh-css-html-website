/* 字体 */
html {
  /* 62.5% * 16 === 10 */
  font-size: 62.5%;
}

:root {
  --color-primary: #00d9ff;
  --color-secondary: #2854ff;
  --color-accent: #ff3400;
  --color-headings: #1b0760;
  --color-body: #918ca4;
}

body {
  font-family: Inter, arial, helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5;
  color: var(--color-primary);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem; /* 通过测量得出大概离下面正文20px  但是文字的顶外边距大于了这个值所以这么设置没有用  所以让p 的 margin-top: 0;*/
}

h1 {
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}

p {
  margin-top: 0;
}

@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }

  h1 {
    font-size: 8rem;
  }

  h2 {
    font-size: 4rem;
  }

  h3 {
    font-size: 2.4rem;
  }
}

/* 链接 links */
a {
  text-decoration: none; /* 没有下划线了 */
}

.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}

.link-arrow::after {
  content: "-->";
  margin-left: 5px; /* 这里只想要个空隙,所以px就可以了 */
  transition: margin 0.5s;
}

.link-arrow:hover::after {
  /* 这条规则只会动态的在尾部伪类悬停的状态才起效 而且顺序不能反 */
  margin-left: 15px;
}

@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* 标签 badge */

.badge {
  border-radius: 20px;
  font-size: 2rem;
  font-weight: 600;
  padding: 0.5rem  2rem;
  white-space: nowrap; /* 这里防止标签的文字另起一行  css 防止文字另起一行*/
}

.badge--primary {
  /* BEM block element modifyier 块元素构造符 用两个短横线表示一个块，或者说一个组件的构造 比如主要标签 */
  background: var(--color-primary);
  color: white;
}

.badge--secondary {
  background: var(--color-secondary);
  color: white;
}

.badge--small{
    font-size: 1.6rem;
}

@media screen and (min-width: 1024px) {
    .badge {
        font-size: 1.5rem;
    }
    .badge--small{
        font-size: 1.2rem;
    }
}

/* lists 列表 */
.list{  /* 因为样式图里虽然有横向和纵向的 但还是有共性的  都没有标号和下划线之类 */
  list-style: none; 
  padding-left: 0;   /* 也要去掉所有浏览器给列表的外边距 */
  color: var(--color-headings);

}

.list--inline .list__item{  /* 区域名和结构名用双下划线分开  它不是另一个单独存在的元素或者组件，它只是存在于这个列表中的 */
  display : inline-block;
  margin-right: 2rem;
}

.list--tick{
  list-style-image: url(../images/tick.svg);
  /* 指定列表中的列表项标记的图像： */
  padding-left: 3rem;
}

.list--tick .list__item{
  /* 防止左边被屏幕吞噬显示不出   这里的嵌套是有一定道理的,如果删除.list--tick就会显示到所有list__item里 */
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
  .list--tick .list__item{
    /* 区别就是图标和文字之间距离小一点 */
    padding-left: 0;
  }
}

/* 图标 icon */

.icon{
  width: 40px;
  height: 40px;
}

.icon--primary{
  fill : var(--color-primary)
  /* fill只对svg生效  设置颜色 */
}

.icon-container{
  background-color: #f3f9fa;
  width: 64px;
  height: 64px;
  border-radius: 100%;
  display: inline-flex; 
  justify-content: center;
  align-items: center;
  /* html里用的是span,高度是不起作用的,所以显示错误 如果用block虽然在一个行内  但就会换行,这是我们不希望的 inline-block就不会对准中心
  flex主轴默认水平 */
}